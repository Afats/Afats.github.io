{"ast":null,"code":"var _jsxFileName = \"/Users/moose/github/afats.github.io/src/components/ScrollToTop/ScrollToTop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport './ScrollToTop.css'; // const ScrollToTop = () => {\n//   const [isVisible, setIsVisible] = useState(false)\n//   useEffect(() => {\n//     const toggleVisibility = () =>\n//       window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n//     window.addEventListener('scroll', toggleVisibility)\n//     return () => window.removeEventListener('scroll', toggleVisibility)\n//   }, [])\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst scrollToTop = () => {\n  _s();\n\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  const [isVisible, setIsVisible] = useState(false);\n\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n\n  useEffect(() => {\n    const toggleVisibility = () => window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false);\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n  return isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-top\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#top\",\n      children: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(scrollToTop, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n\nexport default ScrollToTop;","map":{"version":3,"sources":["/Users/moose/github/afats.github.io/src/components/ScrollToTop/ScrollToTop.js"],"names":["React","useEffect","useState","ArrowUpwardIcon","scrollToTop","c","document","documentElement","scrollTop","body","isVisible","setIsVisible","window","requestAnimationFrame","scrollTo","toggleVisibility","pageYOffset","addEventListener","removeEventListener","ScrollToTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAO,mBAAP,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,CAAC,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,IAAsCF,QAAQ,CAACG,IAAT,CAAcD,SAA9D;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,MAAIG,CAAC,GAAG,CAAR,EAAW;AACTO,IAAAA,MAAM,CAACC,qBAAP,CAA6BT,WAA7B;AACAQ,IAAAA,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmBT,CAAC,GAAGA,CAAC,GAAG,CAA3B;AACD;;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,gBAAgB,GAAG,MACvBH,MAAM,CAACI,WAAP,GAAqB,GAArB,GAA2BL,YAAY,CAAC,IAAD,CAAvC,GAAgDA,YAAY,CAAC,KAAD,CAD9D;;AAGAC,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AACA,WAAO,MAAMH,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC,CAAb;AACD,GANQ,EAMN,EANM,CAAT;AAUA,SAAOL,SAAS,gBACd;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAG,MAAA,IAAI,EAAC,MAAR;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADc,GAMZ,IANJ;AAOD,CA1BD;;GAAMN,W;;AA4BN,eAAee,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\n// const ScrollToTop = () => {\n//   const [isVisible, setIsVisible] = useState(false)\n\n//   useEffect(() => {\n//     const toggleVisibility = () =>\n//       window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n//     window.addEventListener('scroll', toggleVisibility)\n//     return () => window.removeEventListener('scroll', toggleVisibility)\n//   }, [])\n\nconst scrollToTop = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  const [isVisible, setIsVisible] = useState(false)\n\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n"]},"metadata":{},"sourceType":"module"}