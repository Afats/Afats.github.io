{"ast":null,"code":"var _jsxFileName = \"/Users/moose/github/afats.github.io/src/components/Loader/Loader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Lottie from \"react-lottie\";\nimport * as ripple from \"./ripple.json\";\nimport * as blob from \"./blob.json\";\nimport './Loader.css';\nimport Header from '../Header/Header';\nimport About from '../About/About';\nimport Projects from '../Projects/Projects';\nimport Skills from '../Skills/Skills';\nimport ScrollToTop from '../ScrollToTop/ScrollToTop';\nimport Contact from '../Contact/Contact';\nimport Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true,\n  animationData: ripple.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nconst defaultOptions2 = {\n  loop: true,\n  autoplay: true,\n  animationData: blob.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n\nfunction Loader() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setloading] = useState(undefined);\n  const [completed, setcompleted] = useState(undefined);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n        console.log(json);\n        setData(json);\n        setloading(true);\n        setTimeout(() => {\n          setcompleted(true);\n        }, 500);\n      });\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !completed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !loading ? /*#__PURE__*/_jsxDEV(Lottie, {\n        options: defaultOptions2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(Lottie, {\n        options: defaultOptions2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Loader, \"KMgMoIeDpPUPeyUjf4AOgu9mz4U=\");\n\n_c = Loader;\nexport default Loader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"sources":["/Users/moose/github/afats.github.io/src/components/Loader/Loader.js"],"names":["React","useEffect","useState","Lottie","ripple","blob","Header","About","Projects","Skills","ScrollToTop","Contact","Footer","defaultOptions1","loop","autoplay","animationData","default","rendererSettings","preserveAspectRatio","defaultOptions2","Loader","data","setData","loading","setloading","undefined","completed","setcompleted","setTimeout","fetch","then","response","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AAEA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,aAAa,EAAEZ,MAAM,CAACa,OAHF;AAIpBC,EAAAA,gBAAgB,EAAE;AAClBC,IAAAA,mBAAmB,EAAE;AADH;AAJE,CAAxB;AAQA,MAAMC,eAAe,GAAG;AACpBN,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,aAAa,EAAEX,IAAI,CAACY,OAHA;AAIpBC,EAAAA,gBAAgB,EAAE;AAClBC,IAAAA,mBAAmB,EAAE;AADH;AAJE,CAAxB;;AASA,SAASE,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACwB,SAAD,CAAtC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAACwB,SAAD,CAA1C;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,QAAAA,OAAO,CAACU,IAAD,CAAP;AACAR,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,QAAAA,UAAU,CAAC,MAAM;AACjBD,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACC,SAFS,EAEP,GAFO,CAAV;AAGC,OATD;AAUH,KAXS,EAWP,IAXO,CAAV;AAYH,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACA;AAAA,cACC,CAACD,SAAD,gBACD;AAAA,gBACC,CAACH,OAAD,gBACD,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAJA,qBADC,gBASD;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAVA,mBADA;AAuBH;;GA1CQC,M;;KAAAA,M;AA2CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Lottie from \"react-lottie\";\n\nimport * as ripple from \"./ripple.json\";\nimport * as blob from \"./blob.json\";\n\nimport './Loader.css'\nimport Header from '../Header/Header'\nimport About from '../About/About'\nimport Projects from '../Projects/Projects'\nimport Skills from '../Skills/Skills'\nimport ScrollToTop from '../ScrollToTop/ScrollToTop'\nimport Contact from '../Contact/Contact'\nimport Footer from '../Footer/Footer'\n\nconst defaultOptions1 = {\n    loop: true,\n    autoplay: true,\n    animationData: ripple.default,\n    rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n    },\n};\nconst defaultOptions2 = {\n    loop: true,\n    autoplay: true,\n    animationData: blob.default,\n    rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n    },\n};\n\nfunction Loader() {\n    const [data, setData] = useState([]);\n    const [loading, setloading] = useState(undefined);\n    const [completed, setcompleted] = useState(undefined);\n    \n    useEffect(() => {\n        setTimeout(() => {\n            fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then((response) => response.json())\n            .then((json) => {\n            console.log(json);\n            setData(json);\n            setloading(true);\n            setTimeout(() => {\n            setcompleted(true);\n            }, 500);\n            });\n        }, 2000);\n    }, []);\n    return (\n    <>\n    {!completed ? (\n    <>\n    {!loading ? (\n    <Lottie options={defaultOptions2}/>\n    ) : (\n    <Lottie options={defaultOptions2}/>\n    )}\n    </>\n    ) : (\n    <>\n    <Header />\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n    <ScrollToTop />\n    <Footer />\n    </>\n    )}\n    </>\n    );\n}\nexport default Loader;"]},"metadata":{},"sourceType":"module"}