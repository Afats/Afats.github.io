{"ast":null,"code":"import uniqid from'uniqid';import{projects,shuffled_projects,projects_intro,shuffled_projects_intro}from'../../portfolio';import ProjectContainer from'../ProjectContainer/ProjectContainer';import'./Projects.css';import'../About/About.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Projects=function Projects(){if(shuffled_projects==null){var desc=projects_intro.desc,plug_desc=projects_intro.plug_desc;return/*#__PURE__*/_jsxs(\"section\",{id:\"projects\",className:\"section projects\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section__title\",children:/*#__PURE__*/_jsx(\"span\",{className:\"electric__blue\",children:\"Projects\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"projects__intro\",children:/*#__PURE__*/_jsx(\"b\",{children:desc})}),/*#__PURE__*/_jsxs(\"p\",{className:\"projects__plug\",children:[plug_desc,/*#__PURE__*/_jsx(\"a\",{className:\"link\",href:\"https://github.com/Afats?tab=repositories\",children:\"here\"}),\".\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"projects__grid\",children:projects.map(function(project){return/*#__PURE__*/_jsx(ProjectContainer,{project:project},uniqid());})})]});}else{var _desc=shuffled_projects_intro.desc,_plug_desc=shuffled_projects_intro.plug_desc;return/*#__PURE__*/_jsxs(\"section\",{id:\"projects\",className:\"section projects\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section__title\",children:/*#__PURE__*/_jsx(\"span\",{className:\"electric__blue\",children:\"Projects\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"projects__intro\",children:/*#__PURE__*/_jsx(\"b\",{children:_desc})}),/*#__PURE__*/_jsxs(\"p\",{className:\"projects__plug\",children:[_plug_desc,/*#__PURE__*/_jsx(\"a\",{className:\"link\",href:\"https://github.com/Afats?tab=repositories\",children:\"here\"}),\".\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"projects__grid\",children:shuffled_projects.map(function(shuffled_project){return/*#__PURE__*/_jsx(ProjectContainer,{project:shuffled_project},uniqid());})})]});}};export default Projects;","map":{"version":3,"sources":["/Users/moose/github/afats.github.io/src/components/Projects/Projects.js"],"names":["uniqid","projects","shuffled_projects","projects_intro","shuffled_projects_intro","ProjectContainer","Projects","desc","plug_desc","map","project","shuffled_project"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,QAAT,CAAmBC,iBAAnB,CAAsCC,cAAtC,CAAsDC,uBAAtD,KAAqF,iBAArF,CACA,MAAOC,CAAAA,gBAAP,KAA6B,sCAA7B,CACA,MAAO,gBAAP,CACA,MAAO,oBAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAIJ,iBAAiB,EAAI,IAAzB,CAA+B,IACnBK,CAAAA,IADmB,CACCJ,cADD,CACnBI,IADmB,CACbC,SADa,CACCL,cADD,CACbK,SADa,CAE3B,mBACE,iBAAS,EAAE,CAAC,UAAZ,CAAuB,SAAS,CAAC,kBAAjC,wBACE,WAAI,SAAS,CAAC,gBAAd,uBAA+B,aAAM,SAAS,CAAC,gBAAhB,sBAA/B,EADF,cAEE,UAAG,SAAS,CAAC,iBAAb,uBAA+B,mBAAID,IAAJ,EAA/B,EAFF,cAGE,WAAG,SAAS,CAAC,gBAAb,WAA+BC,SAA/B,cAAyC,UAAG,SAAS,CAAE,MAAd,CAAqB,IAAI,CAAC,2CAA1B,kBAAzC,OAHF,cAIE,YAAK,SAAS,CAAC,gBAAf,UACGP,QAAQ,CAACQ,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,gBAAD,EAAiC,OAAO,CAAEA,OAA1C,EAAuBV,MAAM,EAA7B,CADY,EAAb,CADH,EAJF,GADF,CAYH,CAdD,IAgBK,IACKO,CAAAA,KADL,CACyBH,uBADzB,CACKG,IADL,CACWC,UADX,CACyBJ,uBADzB,CACWI,SADX,CAGH,mBACE,iBAAS,EAAE,CAAC,UAAZ,CAAuB,SAAS,CAAC,kBAAjC,wBACE,WAAI,SAAS,CAAC,gBAAd,uBAA+B,aAAM,SAAS,CAAC,gBAAhB,sBAA/B,EADF,cAEE,UAAG,SAAS,CAAC,iBAAb,uBAA+B,mBAAID,KAAJ,EAA/B,EAFF,cAGE,WAAG,SAAS,CAAC,gBAAb,WAA+BC,UAA/B,cAAyC,UAAG,SAAS,CAAE,MAAd,CAAqB,IAAI,CAAC,2CAA1B,kBAAzC,OAHF,cAIE,YAAK,SAAS,CAAC,gBAAf,UACGN,iBAAiB,CAACO,GAAlB,CAAsB,SAACE,gBAAD,qBACrB,KAAC,gBAAD,EAAiC,OAAO,CAAEA,gBAA1C,EAAuBX,MAAM,EAA7B,CADqB,EAAtB,CADH,EAJF,GADF,CAaD,CACF,CAlCD,CAoCA,cAAeM,CAAAA,QAAf","sourcesContent":["import uniqid from 'uniqid'\nimport { projects, shuffled_projects, projects_intro, shuffled_projects_intro } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\nimport '../About/About.css'\n\nconst Projects = () => {\n  if (shuffled_projects == null) {\n      const { desc, plug_desc } = projects_intro\n      return (\n        <section id='projects' className='section projects'>\n          <h2 className='section__title'><span className='electric__blue'>Projects</span></h2>\n          <p className='projects__intro'><b>{desc}</b></p>\n          <p className='projects__plug'>{plug_desc}<a className= 'link' href=\"https://github.com/Afats?tab=repositories\">here</a>.</p>\n          <div className='projects__grid'>\n            {projects.map((project) => (\n              <ProjectContainer key={uniqid()} project={project} />\n            ))}\n          </div>\n        </section>\n      )\n  }\n\n  else {\n    const { desc, plug_desc } = shuffled_projects_intro\n\n    return (\n      <section id='projects' className='section projects'>\n        <h2 className='section__title'><span className='electric__blue'>Projects</span></h2>\n        <p className='projects__intro'><b>{desc}</b></p>\n        <p className='projects__plug'>{plug_desc}<a className= 'link' href=\"https://github.com/Afats?tab=repositories\">here</a>.</p>\n        <div className='projects__grid'>\n          {shuffled_projects.map((shuffled_project) => (\n            <ProjectContainer key={uniqid()} project={shuffled_project} />\n          ))}\n        </div>\n      </section>\n    )\n\n  }\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}